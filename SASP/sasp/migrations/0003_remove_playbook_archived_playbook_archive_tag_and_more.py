# Generated by Django 5.1.1 on 2024-09-10 11:40

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sasp', '0002_playbook_archived_playbook_object_archived'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='playbook',
            name='archived',
        ),
        migrations.AddField(
            model_name='playbook',
            name='archive_tag',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='playbook',
            name='archived_on',
            field=models.DateTimeField(blank=True, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='playbook',
            name='wiki_page_name',
            field=models.CharField(editable=False, max_length=200),
        ),
        migrations.AddConstraint(
            model_name='playbook',
            constraint=models.UniqueConstraint(condition=models.Q(('archive_tag__isnull', True)), fields=('wiki_page_name',), name='playbook_unique_wiki_page_name_when_archive_tag_is_null', violation_error_message='The wiki page name must be unique unless the playbook is archived'),
        ),
        migrations.AddConstraint(
            model_name='playbook',
            constraint=models.UniqueConstraint(fields=('wiki_page_name', 'archive_tag'), name='playbook_unique_wiki_page_name', violation_error_message='Archive tags must be unique for each playbook'),
        ),
        migrations.AddConstraint(
            model_name='playbook',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('archived_on__isnull', False), ('archive_tag__isnull', False)), models.Q(('archived_on__isnull', True), ('archive_tag__isnull', True)), _connector='OR'), name='playbook_archive_tag_and_archived_on', violation_error_message='If the playbook is archived, both the archive tag and the archived on date must be set'),
        ),
        migrations.AddConstraint(
            model_name='playbook_object',
            constraint=models.UniqueConstraint(condition=models.Q(('archived', False)), fields=('wiki_page_name',), name='pb_object_unique_wiki_page_name', violation_error_message='The wiki page name must be unique'),
        ),
    ]
